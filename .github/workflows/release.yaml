# .github/workflows/release.yaml
name: Build Release

#on:
#  push:
#    tags:
#      - '*'

on:
  #repository_dispatch:
  workflow_dispatch:
    inputs:
      tags:
        description: 'create tags version'
        required: true
        type: string

env:
  APP_NAME: hdwallet
  GO_VERSION: 1.20.x
  GOCACHE: /home/runner/work/go/pkg/build
  GOPATH: /home/runner/work/go

jobs:
  release:
    #if: startsWith(github.ref, 'refs/tags/') # create tags.
    #if: ${{ inputs.print_tags }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # checkout code
      
      - name: Install Go
        uses: actions/setup-go@v3 # setting golang
        with:
          go-version: ${{ env.GO_VERSION }} # request go version
      
      #- name: Get tag name
      #  id: tag_name
      #  shell: bash
      #  run: |
      #    r=$(echo ${{ github.ref }} | rev | cut -d '/' -f 1 | rev)
      #    echo "TAG_NAME=$r" >> $GITHUB_OUTPUT

      - name: Build-linux_amd64
        run: go build -o release/${{ env.APP_NAME }}_linux_amd64 main.go > ${{ github.workspace }}_linux_amd64-BUILDLOG.txt
      - name: Create_linux_amd64_md5
        run: md5sum ${{ env.APP_NAME }}_linux_amd64 | cut -d ' ' -f 1 > release/${{ env.APP_NAME }}_linux_amd64.md5
      - name: Create_linux_amd64_sha256
        run: sha256sum ${{ env.APP_NAME }}_linux_amd64 | cut -d ' ' -f 1 > release/${{ env.APP_NAME }}_linux_amd64.sha256

      - name: Build-windows_amd64
        run: CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o release/${{ env.APP_NAME }}_windows_amd64.exe main.go > ${{ github.workspace }}_windows_amd64-BUILDLOG.txt
      - name: Create_windows_amd64_md5
        run: md5sum ${{ env.APP_NAME }}_windows_amd64 | cut -d ' ' -f 1 > release/${{ env.APP_NAME }}_windows_amd64.md5
      - name: Create_windows_amd64_sha256
        run: sha256sum ${{ env.APP_NAME }}_windows_amd64 | cut -d ' ' -f 1 > release/${{ env.APP_NAME }}_windows_amd64.sha256

      - name: Build-drawin_amd64
        run: CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o release/${{ env.APP_NAME }}_darwin_amd64 main.go >> ${{ github.workspace }}_drawin_amd64-BUILDLOG.txt
      - name: Create_drawin_amd64_md5
        run: md5sum ${{ env.APP_NAME }}_drawin_amd64 | cut -d ' ' -f 1 > release/${{ env.APP_NAME }}_drawin_amd64.md5
      - name: Create_drawin_amd64_sha256
        run: sha256sum ${{ env.APP_NAME }}_drawin_amd64 | cut -d ' ' -f 1 > release/${{ env.APP_NAME }}_drawin_amd64.sha256

      #- name: Create Release
      #  uses: svenstaro/upload-release-action@v2
      #  with:
      #    repo_token: ${{ secrets.GITHUB_TOKEN }}
      #    tag: ${{ github.ref }}
      #    file: release/*
      #    overwrite: true
      #    file_glob: true
      #    body: "This is ${{ steps.tag_name.outputs.TAG_NAME }} release."

      - name: Upload files to release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.tags }}
          body: "This is ${{ inputs.tags }} release."
          files: release/*